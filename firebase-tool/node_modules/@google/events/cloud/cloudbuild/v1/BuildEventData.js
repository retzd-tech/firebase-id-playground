"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.toBuildEventData = exports.StatusEnum = exports.SubstitutionOptionEnum = exports.SourceProvenanceHashEnum = exports.RequestedVerifyOptionEnum = exports.MachineTypeEnum = exports.LoggingEnum = exports.LogStreamingOptionEnum = void 0;
var LogStreamingOptionEnum;
(function (LogStreamingOptionEnum) {
    LogStreamingOptionEnum["StreamDefault"] = "STREAM_DEFAULT";
    LogStreamingOptionEnum["StreamOff"] = "STREAM_OFF";
    LogStreamingOptionEnum["StreamOn"] = "STREAM_ON";
})(LogStreamingOptionEnum = exports.LogStreamingOptionEnum || (exports.LogStreamingOptionEnum = {}));
var LoggingEnum;
(function (LoggingEnum) {
    LoggingEnum["GcsOnly"] = "GCS_ONLY";
    LoggingEnum["Legacy"] = "LEGACY";
    LoggingEnum["LoggingUnspecified"] = "LOGGING_UNSPECIFIED";
})(LoggingEnum = exports.LoggingEnum || (exports.LoggingEnum = {}));
var MachineTypeEnum;
(function (MachineTypeEnum) {
    MachineTypeEnum["N1Highcpu32"] = "N1_HIGHCPU_32";
    MachineTypeEnum["N1Highcpu8"] = "N1_HIGHCPU_8";
    MachineTypeEnum["Unspecified"] = "UNSPECIFIED";
})(MachineTypeEnum = exports.MachineTypeEnum || (exports.MachineTypeEnum = {}));
var RequestedVerifyOptionEnum;
(function (RequestedVerifyOptionEnum) {
    RequestedVerifyOptionEnum["NotVerified"] = "NOT_VERIFIED";
    RequestedVerifyOptionEnum["Verified"] = "VERIFIED";
})(RequestedVerifyOptionEnum = exports.RequestedVerifyOptionEnum || (exports.RequestedVerifyOptionEnum = {}));
var SourceProvenanceHashEnum;
(function (SourceProvenanceHashEnum) {
    SourceProvenanceHashEnum["Md5"] = "MD5";
    SourceProvenanceHashEnum["None"] = "NONE";
    SourceProvenanceHashEnum["Sha256"] = "SHA256";
})(SourceProvenanceHashEnum = exports.SourceProvenanceHashEnum || (exports.SourceProvenanceHashEnum = {}));
var SubstitutionOptionEnum;
(function (SubstitutionOptionEnum) {
    SubstitutionOptionEnum["AllowLoose"] = "ALLOW_LOOSE";
    SubstitutionOptionEnum["MustMatch"] = "MUST_MATCH";
})(SubstitutionOptionEnum = exports.SubstitutionOptionEnum || (exports.SubstitutionOptionEnum = {}));
var StatusEnum;
(function (StatusEnum) {
    StatusEnum["Cancelled"] = "CANCELLED";
    StatusEnum["Expired"] = "EXPIRED";
    StatusEnum["Failure"] = "FAILURE";
    StatusEnum["InternalError"] = "INTERNAL_ERROR";
    StatusEnum["Queued"] = "QUEUED";
    StatusEnum["StatusUnknown"] = "STATUS_UNKNOWN";
    StatusEnum["Success"] = "SUCCESS";
    StatusEnum["Timeout"] = "TIMEOUT";
    StatusEnum["Working"] = "WORKING";
})(StatusEnum = exports.StatusEnum || (exports.StatusEnum = {}));
/**
 * Cast a raw JSON object to a typed event (useful for IDE autocompletion).
 * @param {object} json The JSON object
 * @return {BuildEventData} The object with type annotations
 */
const toBuildEventData = (json) => {
    return json;
};
exports.toBuildEventData = toBuildEventData;
